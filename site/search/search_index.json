{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenido a mi blog \u00b6 En este sitio web subir\u00e9 todo el contenido e informaci\u00f3n de diversos programas de software estad\u00edstico. SAS \u00b6 Para ir al blog de SAS haz click aqu\u00ed . En este blog conoceras todo lo relacionado a: SAS/BASE - Contiene todo lo esencial para leer, manipular datos as\u00edc omo otras funciones b\u00e1sicas de SAS. SAS/STAT - Tiene muchos m\u00e9todos estad\u00edsticos y otros an\u00e1lisis de datos. SAS/IML - Es un lenguaje espec\u00edfico para lenguaje de matrices y funciones matem\u00e1ticas y estad\u00edsticas avanzadas. OTROS - Conexi\u00f3n de SAS con otros lenguajes de programaci\u00f3n y sus configuraciones. R \u00b6 Visita mi blog sobre R . En este blog encontrar\u00e1s todo lo relacionada al lenguaje R. Variables Funciones Matrices Gr\u00e1ficas Data sets Entre otras cosas m\u00e1s. Python \u00b6 Click aqu\u00ed para ir a mi blog de Python. Redes sociales \u00b6 S\u00edguenos en nuestras redes sociales Github","title":"Bienvenido a mi blog"},{"location":"#bienvenido-a-mi-blog","text":"En este sitio web subir\u00e9 todo el contenido e informaci\u00f3n de diversos programas de software estad\u00edstico.","title":"Bienvenido a mi blog"},{"location":"#sas","text":"Para ir al blog de SAS haz click aqu\u00ed . En este blog conoceras todo lo relacionado a: SAS/BASE - Contiene todo lo esencial para leer, manipular datos as\u00edc omo otras funciones b\u00e1sicas de SAS. SAS/STAT - Tiene muchos m\u00e9todos estad\u00edsticos y otros an\u00e1lisis de datos. SAS/IML - Es un lenguaje espec\u00edfico para lenguaje de matrices y funciones matem\u00e1ticas y estad\u00edsticas avanzadas. OTROS - Conexi\u00f3n de SAS con otros lenguajes de programaci\u00f3n y sus configuraciones.","title":"SAS"},{"location":"#r","text":"Visita mi blog sobre R . En este blog encontrar\u00e1s todo lo relacionada al lenguaje R. Variables Funciones Matrices Gr\u00e1ficas Data sets Entre otras cosas m\u00e1s.","title":"R"},{"location":"#python","text":"Click aqu\u00ed para ir a mi blog de Python.","title":"Python"},{"location":"#redes-sociales","text":"S\u00edguenos en nuestras redes sociales Github","title":"Redes sociales"},{"location":"about/","text":"Acerca de \u00b6 Nota \u00b6 Este blog contien c\u00f3digos personales y bajo ning\u00fan motivo el autor es responsable de los da\u00f1os ocasionados por resultados inesperados. Software de terceros \u00b6 Los softwares usados son","title":"About"},{"location":"about/#acerca-de","text":"","title":"Acerca de"},{"location":"about/#nota","text":"Este blog contien c\u00f3digos personales y bajo ning\u00fan motivo el autor es responsable de los da\u00f1os ocasionados por resultados inesperados.","title":"Nota"},{"location":"about/#software-de-terceros","text":"Los softwares usados son","title":"Software de terceros"},{"location":"python/basico/","text":"Librer\u00edas \u00b6 El primer paso es llamar las librer\u00edas que se utilizar\u00e1n en la sesi\u00f3n. Usaremos pandas y numpy y otra librer\u00eda adicional llamada os . 1 2 3 import pandas as pd import numpy as np import os Nota En ocasiones es preferible usar nombres m\u00e1s cortos para referirnos a los nombres de las librer\u00edas. Por ejemplo, a pandas le llamaremos pd y np para referirnos a numpy . Ahora llamaremos a la funci\u00f3n para leer los datos. 1 datos = pd . read_csv ( \"census.csv\" ) Para visualizar los primeros 5 datos se puede usar este c\u00f3digo 1 datos . head ( n = 5 )","title":"Python nivel b\u00e1sico"},{"location":"python/basico/#librerias","text":"El primer paso es llamar las librer\u00edas que se utilizar\u00e1n en la sesi\u00f3n. Usaremos pandas y numpy y otra librer\u00eda adicional llamada os . 1 2 3 import pandas as pd import numpy as np import os Nota En ocasiones es preferible usar nombres m\u00e1s cortos para referirnos a los nombres de las librer\u00edas. Por ejemplo, a pandas le llamaremos pd y np para referirnos a numpy . Ahora llamaremos a la funci\u00f3n para leer los datos. 1 datos = pd . read_csv ( \"census.csv\" ) Para visualizar los primeros 5 datos se puede usar este c\u00f3digo 1 datos . head ( n = 5 )","title":"Librer\u00edas"},{"location":"python/intro_python/","text":"Esta es un tutorial r\u00e1pido sobre el programa. Instalaci\u00f3n \u00b6 El sitio oficial de Python es python.org , sin embargo se recomienda instalar Anaconda , una distribuci\u00f3n de Pthon que contiene muchos m\u00f3dulos y software adicional para trabajar con Python. Anaconda \u00b6 Usted puede descargar el software gratuitamente. Visite la p\u00e1gina de Anaconda para m\u00e1s informaci\u00f3n. Interfaces gr\u00e1ficas \u00b6 Consola \u00b6 Python corre desde la consola de windows (cmd o powershell), aunque puede ser llamada desde Anaconda Prompt o Anaconda Powershell Prompt . Spyder \u00b6 Es otra interfaz gr\u00e1fica destinada a desarrollar c\u00f3digo eficientemente, ya que cuenta con varias opciones de configuraci\u00f3n y ventanas con varias funciones. Esta interfaz gr\u00e1fica ya viene incluida en Anaconda. Jupyter Notebooks \u00b6 Python tiene unos cuadernos interactivos para correr c\u00f3digo interactivamente. Jupyter Notebooks se instala junto con Anaconda.","title":"Introducci\u00f3n a Python"},{"location":"python/intro_python/#instalacion","text":"El sitio oficial de Python es python.org , sin embargo se recomienda instalar Anaconda , una distribuci\u00f3n de Pthon que contiene muchos m\u00f3dulos y software adicional para trabajar con Python.","title":"Instalaci\u00f3n"},{"location":"python/intro_python/#anaconda","text":"Usted puede descargar el software gratuitamente. Visite la p\u00e1gina de Anaconda para m\u00e1s informaci\u00f3n.","title":"Anaconda"},{"location":"python/intro_python/#interfaces-graficas","text":"","title":"Interfaces gr\u00e1ficas"},{"location":"python/intro_python/#consola","text":"Python corre desde la consola de windows (cmd o powershell), aunque puede ser llamada desde Anaconda Prompt o Anaconda Powershell Prompt .","title":"Consola"},{"location":"python/intro_python/#spyder","text":"Es otra interfaz gr\u00e1fica destinada a desarrollar c\u00f3digo eficientemente, ya que cuenta con varias opciones de configuraci\u00f3n y ventanas con varias funciones. Esta interfaz gr\u00e1fica ya viene incluida en Anaconda.","title":"Spyder"},{"location":"python/intro_python/#jupyter-notebooks","text":"Python tiene unos cuadernos interactivos para correr c\u00f3digo interactivamente. Jupyter Notebooks se instala junto con Anaconda.","title":"Jupyter Notebooks"},{"location":"r/basico_r/","text":"Conociendo R \u00b6","title":"R nivel b\u00e1sico"},{"location":"r/basico_r/#conociendo-r","text":"","title":"Conociendo R"},{"location":"r/intro_r/","text":"Esta es un tutorial r\u00e1pido sobre el programa. Instalaci\u00f3n \u00b6 R-project \u00b6 Usted puede descargar el software gratuitamente. Visite la p\u00e1gina de R para m\u00e1s informaci\u00f3n. R studio \u00b6 R tiene una interfaz gr\u00e1fica para crear c\u00f3digo de forma m\u00e1s amigable. Visite R Studio para m\u00e1s informaci\u00f3n. Conceptos b\u00e1sicos \u00b6 R es un lenguaje de programaci\u00f3n que usa objetos. Estos objetos tienen identidad, atributos y propiedades. Escalares \u00b6 Un escalar es un vector con un solo elemento. Se pueden crear escalares con el s\u00edmbolo de asignaci\u00f3n <- o = . 1 2 3 n <- 5 m = n + 1 a = \"Hola mundo!\" Vectores \u00b6 Un vector es un objeto con uno o m\u00e1s elementos. Puede contener elementos num\u00e9ricos o caracteres. Se pueden crear vectores con la funci\u00f3n c() , por ejemplo: 1 2 3 x = c ( 2 , 1 , 5 ) y = m * x + n z = c ( \"ABC\" , \"AEI\" , \"XYZ\" ) Los vectores permiten algunas operaciones Matrices \u00b6 Factores \u00b6 Data Frames \u00b6 Listas \u00b6","title":"Introducci\u00f3n a R"},{"location":"r/intro_r/#instalacion","text":"","title":"Instalaci\u00f3n"},{"location":"r/intro_r/#r-project","text":"Usted puede descargar el software gratuitamente. Visite la p\u00e1gina de R para m\u00e1s informaci\u00f3n.","title":"R-project"},{"location":"r/intro_r/#r-studio","text":"R tiene una interfaz gr\u00e1fica para crear c\u00f3digo de forma m\u00e1s amigable. Visite R Studio para m\u00e1s informaci\u00f3n.","title":"R studio"},{"location":"r/intro_r/#conceptos-basicos","text":"R es un lenguaje de programaci\u00f3n que usa objetos. Estos objetos tienen identidad, atributos y propiedades.","title":"Conceptos b\u00e1sicos"},{"location":"r/intro_r/#escalares","text":"Un escalar es un vector con un solo elemento. Se pueden crear escalares con el s\u00edmbolo de asignaci\u00f3n <- o = . 1 2 3 n <- 5 m = n + 1 a = \"Hola mundo!\"","title":"Escalares"},{"location":"r/intro_r/#vectores","text":"Un vector es un objeto con uno o m\u00e1s elementos. Puede contener elementos num\u00e9ricos o caracteres. Se pueden crear vectores con la funci\u00f3n c() , por ejemplo: 1 2 3 x = c ( 2 , 1 , 5 ) y = m * x + n z = c ( \"ABC\" , \"AEI\" , \"XYZ\" ) Los vectores permiten algunas operaciones","title":"Vectores"},{"location":"r/intro_r/#matrices","text":"","title":"Matrices"},{"location":"r/intro_r/#factores","text":"","title":"Factores"},{"location":"r/intro_r/#data-frames","text":"","title":"Data Frames"},{"location":"r/intro_r/#listas","text":"","title":"Listas"},{"location":"sas/intro_sas/","text":"Esta es un tutorial r\u00e1pido sobre el programa. Instalaci\u00f3n \u00b6 Consulte el sitio web de sas para m\u00e1s detalles. SAS University Edition SAS no es software libre ni es gratuito, sin embargo usted puede descargar el software gratuitamente. Visite SAS University edition para m\u00e1s informaci\u00f3n. Interfaces gr\u00e1ficas \u00b6 SAS Base \u00b6 Es la interfaz gr\u00e1fica cl\u00e1sica de SAS. Contiene una verntana lateral con una lista de librer\u00edas, mientras que hay una ventana principal de mensajes (log) y otra para escribir c\u00f3digo. SAS Enterprise Guide \u00b6 SAS Studio \u00b6 Conceptos b\u00e1sicos \u00b6 Datasets \u00b6 SAS almacena los datos en tablas llamadas datasets, los cuales son archivos que se almacenan en carpetas (librer\u00edas) de la computadora. SAS maneja dos tipos de datos: num\u00e9ricos y caracter. Los dataset permiten almacenar un tipo de dato en cada variable. Para crear un dataset, se utiliza un bloque de instrucciones comunmente llamado paso DATA. El paso DATA inicia con la sentencia DATA seguido del nombre del dataset y termina con la palabra clave RUN. Por ejemplo el siguiente c\u00f3digo crea un dataset con 1 observaci\u00f3n y tres variables (2 num\u00e9ricas y otra caracter). 1 2 3 4 5 6 7 8 data ejemplo; format fecha date.; fecha = today( ); input x grupo $; datalines; 12.5 azul ; run; La primer sentencia define el nombre del dataset. La segunda le asigna un formato de fecha a la variable fecha. En la tercer sentencia se define una variable num\u00e9rica mediante una funci\u00f3n, la cual obtiene la fecha de hoy (n\u00famero de d\u00edas transcurridos desde el 1 de enero de 1960). En la siguiente sentencia se declaran 2 variables, la segunda se define como caracter al agregarle el signo $ . La sentencia datalines le dice al programa que se introducir\u00e1n valores de manera manual (cada rengl\u00f3n representa la primera observaci\u00f3n y cada variable est\u00e1 separada por un espacio). El punto y coma dicta el fin de la introducci\u00f3n de datos. Finalmente la palabra RUN define el fin del paso DATA. Librer\u00edas \u00b6 Las librer\u00edas o bibliotecas son rutas donde se almacenan los datasets. Si no se define una librer\u00eda, sas define una librer\u00eda temporal llamada WORK, la cual eliminar\u00e1 todos los datasets al finalizar la sesi\u00f3n. Para definir una librer\u00eda, se puede asignar una librer\u00eda a un ruta de la forma libname libref 'sas-library'; , donde libref es el nombre de la librer\u00eda y sas-library es la ruta donde se almacenar\u00e1n los dataset, por ejemplo: 1 libname tareas \"C:\\Users\\Default\\Documents\" ; asignar\u00eda dicho directorio a la librer\u00eda tareas . Para referirse a un dataset almacenado en dicha librer\u00eda, se utiliza el siguiente nombre library.dataset , por ejemplo tareas.tabla . Procedimientos y pasos DATA \u00b6 SAS se compone de dos grandes bloques: el paso DATA para crear o modificar un dataset y paso PROC. Macros y variables macro \u00b6 Adem\u00e1s de los pasos PROC y DATA, SAS tiene un lenguaje especial llamado lenguaje macro, el cual especie de procesador de instrucciones que compila y ejecuta. Este lenguaje es muy \u00fatil para ejecutar tareas comunes o repetitivas A diferencia de otros lenguajes de programaci\u00f3n, SAS no permite definir variables de forma directa. Sin embargo, es posible definir variables macro , las cuales almacenan un valor ya sea un n\u00famero o un texto. Dichas variables son evaluadas y pueden ser llamadas en cualquier procedimiento macro. Hay tres formas de crear variables macro: Con la sentencia %let . Con la llamada symput() . con la sentencia INTO dentro de un procedimiento SQL. Se usa la sentencia %let macro-variable = <value>; y para mandar llamar el valor de dicha variable maro se usa &macro-variable . Por ejemplo si se desea definir ciertas variables a analizar, se puede crear la siguiente sentencia; 1 2 3 4 5 %let x = age weight height ; proc means data = sashelp . class; var &x ; run; Para ver el valor de la variable macro, se puede usar la sentencia macro %PUT <&macro-variable> , por ejemplo: 1 %PUT &x ; y el resultado ser\u00e1 age weight height Para m\u00e1s informaci\u00f3n acerca de sentencias y variables macro visite la documentaci\u00f3n de SAS .","title":"Introducci\u00f3n a SAS"},{"location":"sas/intro_sas/#instalacion","text":"Consulte el sitio web de sas para m\u00e1s detalles. SAS University Edition SAS no es software libre ni es gratuito, sin embargo usted puede descargar el software gratuitamente. Visite SAS University edition para m\u00e1s informaci\u00f3n.","title":"Instalaci\u00f3n"},{"location":"sas/intro_sas/#interfaces-graficas","text":"","title":"Interfaces gr\u00e1ficas"},{"location":"sas/intro_sas/#sas-base","text":"Es la interfaz gr\u00e1fica cl\u00e1sica de SAS. Contiene una verntana lateral con una lista de librer\u00edas, mientras que hay una ventana principal de mensajes (log) y otra para escribir c\u00f3digo.","title":"SAS Base"},{"location":"sas/intro_sas/#sas-enterprise-guide","text":"","title":"SAS Enterprise Guide"},{"location":"sas/intro_sas/#sas-studio","text":"","title":"SAS Studio"},{"location":"sas/intro_sas/#conceptos-basicos","text":"","title":"Conceptos b\u00e1sicos"},{"location":"sas/intro_sas/#datasets","text":"SAS almacena los datos en tablas llamadas datasets, los cuales son archivos que se almacenan en carpetas (librer\u00edas) de la computadora. SAS maneja dos tipos de datos: num\u00e9ricos y caracter. Los dataset permiten almacenar un tipo de dato en cada variable. Para crear un dataset, se utiliza un bloque de instrucciones comunmente llamado paso DATA. El paso DATA inicia con la sentencia DATA seguido del nombre del dataset y termina con la palabra clave RUN. Por ejemplo el siguiente c\u00f3digo crea un dataset con 1 observaci\u00f3n y tres variables (2 num\u00e9ricas y otra caracter). 1 2 3 4 5 6 7 8 data ejemplo; format fecha date.; fecha = today( ); input x grupo $; datalines; 12.5 azul ; run; La primer sentencia define el nombre del dataset. La segunda le asigna un formato de fecha a la variable fecha. En la tercer sentencia se define una variable num\u00e9rica mediante una funci\u00f3n, la cual obtiene la fecha de hoy (n\u00famero de d\u00edas transcurridos desde el 1 de enero de 1960). En la siguiente sentencia se declaran 2 variables, la segunda se define como caracter al agregarle el signo $ . La sentencia datalines le dice al programa que se introducir\u00e1n valores de manera manual (cada rengl\u00f3n representa la primera observaci\u00f3n y cada variable est\u00e1 separada por un espacio). El punto y coma dicta el fin de la introducci\u00f3n de datos. Finalmente la palabra RUN define el fin del paso DATA.","title":"Datasets"},{"location":"sas/intro_sas/#librerias","text":"Las librer\u00edas o bibliotecas son rutas donde se almacenan los datasets. Si no se define una librer\u00eda, sas define una librer\u00eda temporal llamada WORK, la cual eliminar\u00e1 todos los datasets al finalizar la sesi\u00f3n. Para definir una librer\u00eda, se puede asignar una librer\u00eda a un ruta de la forma libname libref 'sas-library'; , donde libref es el nombre de la librer\u00eda y sas-library es la ruta donde se almacenar\u00e1n los dataset, por ejemplo: 1 libname tareas \"C:\\Users\\Default\\Documents\" ; asignar\u00eda dicho directorio a la librer\u00eda tareas . Para referirse a un dataset almacenado en dicha librer\u00eda, se utiliza el siguiente nombre library.dataset , por ejemplo tareas.tabla .","title":"Librer\u00edas"},{"location":"sas/intro_sas/#procedimientos-y-pasos-data","text":"SAS se compone de dos grandes bloques: el paso DATA para crear o modificar un dataset y paso PROC.","title":"Procedimientos y pasos DATA"},{"location":"sas/intro_sas/#macros-y-variables-macro","text":"Adem\u00e1s de los pasos PROC y DATA, SAS tiene un lenguaje especial llamado lenguaje macro, el cual especie de procesador de instrucciones que compila y ejecuta. Este lenguaje es muy \u00fatil para ejecutar tareas comunes o repetitivas A diferencia de otros lenguajes de programaci\u00f3n, SAS no permite definir variables de forma directa. Sin embargo, es posible definir variables macro , las cuales almacenan un valor ya sea un n\u00famero o un texto. Dichas variables son evaluadas y pueden ser llamadas en cualquier procedimiento macro. Hay tres formas de crear variables macro: Con la sentencia %let . Con la llamada symput() . con la sentencia INTO dentro de un procedimiento SQL. Se usa la sentencia %let macro-variable = <value>; y para mandar llamar el valor de dicha variable maro se usa &macro-variable . Por ejemplo si se desea definir ciertas variables a analizar, se puede crear la siguiente sentencia; 1 2 3 4 5 %let x = age weight height ; proc means data = sashelp . class; var &x ; run; Para ver el valor de la variable macro, se puede usar la sentencia macro %PUT <&macro-variable> , por ejemplo: 1 %PUT &x ; y el resultado ser\u00e1 age weight height Para m\u00e1s informaci\u00f3n acerca de sentencias y variables macro visite la documentaci\u00f3n de SAS .","title":"Macros y variables macro"}]}